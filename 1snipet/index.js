//get subtitle youtube
//https://www.youtube.com/embed/1U6RrgYiDyw?  <- run on full screen

async function getYouTubeAutoGeneratedSubtitles(videoId) {
    const url = `https://www.youtube.com/watch?v=${videoId}`;
    try {
        const response = await fetch(url);
        const text = await response.text();

        // Extract the JSON metadata containing the caption tracks
        const ytInitialPlayerResponseMatch = text.match(/ytInitialPlayerResponse\s*=\s*(\{.+?\});/);
        if (ytInitialPlayerResponseMatch) {
            const ytInitialPlayerResponse = JSON.parse(ytInitialPlayerResponseMatch[1]);
            const captionTracks = ytInitialPlayerResponse.captions?.playerCaptionsTracklistRenderer?.captionTracks;

            if (captionTracks) {
                const englishTrack = captionTracks.find(track => track.languageCode === 'en' && track.kind === 'asr');
                if (englishTrack) {
                    const subtitlesUrl = englishTrack.baseUrl;
                    const subtitleResponse = await fetch(subtitlesUrl);
                    let subtitles = await subtitleResponse.text();

                    // Remove XML declaration and <transcript> tags
                    subtitles = subtitles.replace(/<\?xml[^>]*\?>/g, '');
                    subtitles = subtitles.replace(/<\/?transcript[^>]*>/g, '');
                    // Replace <text> tags with new lines
                    subtitles = subtitles.replace(/<\/?text[^>]*>/g, '\n');
                    // Replace HTML entities with characters
                    subtitles = subtitles.replace(/&amp;#39;/g, "'");

                    console.log(subtitles);
                } else {
                    console.log("No auto-generated English subtitles found for this video.");
                }
            } else {
                console.log("No captions found for this video.");
            }
        } else {
            console.log("No subtitle metadata found for this video.");
        }
    } catch (error) {
        console.error("An error occurred:", error);
    }
}

// Function to Extract Video ID from URL
function getYouTubeVideoIdFromUrl(url) {
    const urlParams = new URL(url).searchParams;
    return urlParams.get('v');
}

// Example usage
const videoId = getYouTubeVideoIdFromUrl(window.location.href);
getYouTubeAutoGeneratedSubtitles(videoId);
